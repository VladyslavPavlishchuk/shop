
$(document).on('turbolinks:load', function() {
    $(".custom_edit_form").hide();
    $(".custom_edit_form").find(".custom_error_field").hide();

    console.log(window.location.href === "http://localhost:3000/users/edit");

    if (window.location.href === "http://localhost:3000/users/edit") {
        $('#navigation_menu .active').removeClass('active');
        $('#navigation_menu a:contains("Profile")').addClass('active');
    }

    const get_text = (label_tag, event) => $(event.target.parentNode).siblings().find(label_tag).text();

    const set_input_val = (form_class, input_tag, text) => $(form_class).find(input_tag).val(text);

    const add_row = function(colls_count, table) {
        $(table).append("<tr class='custom_row'></tr>");
        return $(table+" tr:last-child").append(
            __range__(1, colls_count, true).map((i) =>
                "<td class='custom_category_field'></td>")
        );
    };

    const edit_field = (table, num) => $(table).find("tr").last().find("td").eq(num);

    const add_data_to_row = function(table_selector,url) {
        const cols = $(table_selector).find("tr").last().children(".custom_category_field");
        return $.ajax({
            url,
            type: 'get',
            success(response) {
                const resp = JSON.parse(response);
                for (let i = 0, end = response.length-2, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--) {
                    $('.custom_table tr:last td').eq(i).append("<p class='"+Object.keys(resp)[i]+"'>"+Object.values(resp)[i]+"</p>");
                }
                edit_field('.custom_table', -2).empty();
                edit_field('.custom_table', -2).append("<img src='"+resp.image.thumb.url+"'>");
                edit_field('.custom_table', -1).empty();
                edit_field('.custom_table', -1).append("<button type=\"button\" class=\"custom_purple_btn\">Edit</button>");
                return edit_field('.custom_table', -1).append("<button type=\"button\" class=\"custom_purple_btn\">Delete</button>");
            }
        });
    };

    const edit_data_in_row = function(id, event, for_param) {
        if (for_param == null) { for_param = "id"; }
        const cols = $(".custom_table").find("p[class='"+for_param+"']:contains('"+id+"')").parent().siblings();
        return $.ajax({
            url: 'products/show',
            type: 'get',
            data: {id},
            success(response) {
                const resp = JSON.parse(response);

                for (let i = 0, end = cols.length-2, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--) {
                    edit_field('.custom_table', i).empty();
                    $('.custom_table tr:last td').eq(i).append("<p class='"+Object.keys(resp)[i]+"'>"+Object.values(resp)[i]+"</p>");
                    edit_field('.custom_table', -2).empty();
                }
                return edit_field('.custom_table', -2).append("<img src='"+resp.image.thumb.url+"'>");
            }
        });
    };

    $('.custom_category_field').on('mouseover', event => $(event.target.closest('.row')).css('background-color', '#e2daff'));

    $('.custom_category_field').on('mouseout', event => $(event.target.closest('.row')).css('background-color', 'white'));

    //Hide new btn and index edit form
    $('.custom_big_purple_btn').on('click', function(event) {
        event.preventDefault();
        return $('.custom_big_purple_btn').hide("slow", () => $(".custom_edit_form").show("slow"));
    });

    $('#products_table button:contains("Edit")').on('click', function(event) {
        event.preventDefault();
        $('.custom_big_purple_btn').hide("slow", () => $(".custom_edit_form").show("slow"));
        set_input_val(".custom_edit_form", "input[type='hidden']", get_text("p[class='id']", event));
        set_input_val(".custom_edit_form", "input[name='name']", get_text("p[class='name']", event));
        set_input_val(".custom_edit_form", "input[name='price']", get_text("p[class='price']", event));
        set_input_val(".custom_edit_form", "textarea[name='description']", get_text("p[class='description']", event));
        return set_input_val(".custom_edit_form", "select[name='category_id']", get_text("p[class='category_id']", event));
    });

//Hide edit form and index new btn
    $('#products_table').find("input[value='Save']").on('click', function(event) {
        event.preventDefault();
        $('.custom_big_purple_btn').hide("slow", () => $(".custom_edit_form").show("slow"));
        const id_value = $(event.target.parentNode).find("input[type='hidden']").val();
        const name_value = $('.custom_edit_form input[name="name"]').val();
        const price_value = $('.custom_edit_form input[name="price"]').val();
        const description_value = $('.custom_edit_form textarea[name="description"]').val();
        const category_value = $('.custom_edit_form select[name="category_id"]').val();
        const data = new FormData();
        data.append('name', name_value);
        data.append('price', price_value);
        data.append('description', description_value);
        data.append('category_id', category_value);
        $.each($("#image_field")[0].files, (i, file) => data.append('image', file));

        const edit_data = new FormData();
        edit_data.append('id', id_value);
        edit_data.append('name', name_value);
        edit_data.append('price', price_value);
        edit_data.append('description', description_value);
        edit_data.append('category_id', category_value);
        $.each($("#image_field")[0].files, (i, file) => edit_data.append('image', file));

        if (!$(event.target.parentNode).find("input[type='hidden']").val().trim().length) {
            return $.ajax({
                url: 'products',
                type: 'post',
                data,
                contentType: false,
                processData: false,
                cache: false,
                success() {
                    $(".custom_edit_form").hide("slow", () => $('.custom_big_purple_btn').show("slow"));
                    add_row(7, ".table");
                    add_data_to_row('.table', 'products/newest');
                    return $(".edit_form").find(".custom_error_field").hide();
                },
                error(responce, json) {
                    $(".custom_edit_form").find(".custom_error_field").show("slow");
                    return $(".custom_edit_form").find(".custom_error_field").find("p").text(responce);
                }
            });
        } else {
            return $.ajax({
                url: 'products',
                type: 'post',
                method: 'PATCH',
                data: edit_data,
                contentType: false,
                processData: false,
                cache: false,
                error(xhr, ajaxOptions, error) {
                    const responce = JSON.parse(xhr.responseText);
                    const errors_log=Object.entries(responce.errors);
                    $(".custom_edit_form").find(".custom_error_field").show("slow");
                    return __range__(0, errors_log.length-1, true).map((i) =>
                        __range__(0, Object.values(errors_log[i])[1].length-1, true).map((j) =>
                            $(".custom_edit_form").find(".custom_error_field").append("<p>"+Object.values(errors_log[i])[0]+" "+Object.values(errors_log[i])[1][j]+"</p>")));
                },
                success() {
                    $(".custom_edit_form").hide("slow", () => $('.custom_big_purple_btn').show("slow"));
                    const new_image = $.get();
                    edit_data_in_row(id_value,event);
                    return $(".custom_edit_form").find(".custom_error_field").hide();
                }
            });
        }
    });

//Delete row
    $('#products_table').find("button:contains('Delete')").on('click', function(event) {
        if (confirm("Are you sure?")) {
            $.ajax({
                url: 'products',
                type: 'post',
                method: 'DELETE',
                success: $(event.target.closest('.custom_row').remove()),
                data: {id: get_text("p[class='id']", event)}
            });
        }
        return event.preventDefault();
    });
});

function __range__(left, right, inclusive) {
    let range = [];
    let ascending = left < right;
    let end = !inclusive ? right : ascending ? right + 1 : right - 1;
    for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {
        range.push(i);
    }
    return range;
}